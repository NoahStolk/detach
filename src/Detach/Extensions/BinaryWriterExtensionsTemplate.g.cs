
// <auto-generated>
// This code was generated by a T4 template.
// Changes to this file may cause incorrect behavior and will be lost if the code is regenerated.
// </auto-generated>

#nullable enable

using Detach.Numerics;

namespace Detach.Extensions;

public static partial class BinaryWriterExtensions
{
	public static void Write(this BinaryWriter binaryWriter, IntVector2<sbyte> value)
	{
		binaryWriter.Write(value.X);
		binaryWriter.Write(value.Y);
	}

	public static void Write(this BinaryWriter binaryWriter, IntVector2<byte> value)
	{
		binaryWriter.Write(value.X);
		binaryWriter.Write(value.Y);
	}

	public static void Write(this BinaryWriter binaryWriter, IntVector2<short> value)
	{
		binaryWriter.Write(value.X);
		binaryWriter.Write(value.Y);
	}

	public static void Write(this BinaryWriter binaryWriter, IntVector2<ushort> value)
	{
		binaryWriter.Write(value.X);
		binaryWriter.Write(value.Y);
	}

	public static void Write(this BinaryWriter binaryWriter, IntVector2<int> value)
	{
		binaryWriter.Write(value.X);
		binaryWriter.Write(value.Y);
	}

	public static void Write(this BinaryWriter binaryWriter, IntVector2<uint> value)
	{
		binaryWriter.Write(value.X);
		binaryWriter.Write(value.Y);
	}

	public static void Write(this BinaryWriter binaryWriter, IntVector2<long> value)
	{
		binaryWriter.Write(value.X);
		binaryWriter.Write(value.Y);
	}

	public static void Write(this BinaryWriter binaryWriter, IntVector2<ulong> value)
	{
		binaryWriter.Write(value.X);
		binaryWriter.Write(value.Y);
	}

	public static void Write(this BinaryWriter binaryWriter, IntVector3<sbyte> value)
	{
		binaryWriter.Write(value.X);
		binaryWriter.Write(value.Y);
		binaryWriter.Write(value.Z);
	}

	public static void Write(this BinaryWriter binaryWriter, IntVector3<byte> value)
	{
		binaryWriter.Write(value.X);
		binaryWriter.Write(value.Y);
		binaryWriter.Write(value.Z);
	}

	public static void Write(this BinaryWriter binaryWriter, IntVector3<short> value)
	{
		binaryWriter.Write(value.X);
		binaryWriter.Write(value.Y);
		binaryWriter.Write(value.Z);
	}

	public static void Write(this BinaryWriter binaryWriter, IntVector3<ushort> value)
	{
		binaryWriter.Write(value.X);
		binaryWriter.Write(value.Y);
		binaryWriter.Write(value.Z);
	}

	public static void Write(this BinaryWriter binaryWriter, IntVector3<int> value)
	{
		binaryWriter.Write(value.X);
		binaryWriter.Write(value.Y);
		binaryWriter.Write(value.Z);
	}

	public static void Write(this BinaryWriter binaryWriter, IntVector3<uint> value)
	{
		binaryWriter.Write(value.X);
		binaryWriter.Write(value.Y);
		binaryWriter.Write(value.Z);
	}

	public static void Write(this BinaryWriter binaryWriter, IntVector3<long> value)
	{
		binaryWriter.Write(value.X);
		binaryWriter.Write(value.Y);
		binaryWriter.Write(value.Z);
	}

	public static void Write(this BinaryWriter binaryWriter, IntVector3<ulong> value)
	{
		binaryWriter.Write(value.X);
		binaryWriter.Write(value.Y);
		binaryWriter.Write(value.Z);
	}

	public static void Write(this BinaryWriter binaryWriter, IntVector4<sbyte> value)
	{
		binaryWriter.Write(value.X);
		binaryWriter.Write(value.Y);
		binaryWriter.Write(value.Z);
		binaryWriter.Write(value.W);
	}

	public static void Write(this BinaryWriter binaryWriter, IntVector4<byte> value)
	{
		binaryWriter.Write(value.X);
		binaryWriter.Write(value.Y);
		binaryWriter.Write(value.Z);
		binaryWriter.Write(value.W);
	}

	public static void Write(this BinaryWriter binaryWriter, IntVector4<short> value)
	{
		binaryWriter.Write(value.X);
		binaryWriter.Write(value.Y);
		binaryWriter.Write(value.Z);
		binaryWriter.Write(value.W);
	}

	public static void Write(this BinaryWriter binaryWriter, IntVector4<ushort> value)
	{
		binaryWriter.Write(value.X);
		binaryWriter.Write(value.Y);
		binaryWriter.Write(value.Z);
		binaryWriter.Write(value.W);
	}

	public static void Write(this BinaryWriter binaryWriter, IntVector4<int> value)
	{
		binaryWriter.Write(value.X);
		binaryWriter.Write(value.Y);
		binaryWriter.Write(value.Z);
		binaryWriter.Write(value.W);
	}

	public static void Write(this BinaryWriter binaryWriter, IntVector4<uint> value)
	{
		binaryWriter.Write(value.X);
		binaryWriter.Write(value.Y);
		binaryWriter.Write(value.Z);
		binaryWriter.Write(value.W);
	}

	public static void Write(this BinaryWriter binaryWriter, IntVector4<long> value)
	{
		binaryWriter.Write(value.X);
		binaryWriter.Write(value.Y);
		binaryWriter.Write(value.Z);
		binaryWriter.Write(value.W);
	}

	public static void Write(this BinaryWriter binaryWriter, IntVector4<ulong> value)
	{
		binaryWriter.Write(value.X);
		binaryWriter.Write(value.Y);
		binaryWriter.Write(value.Z);
		binaryWriter.Write(value.W);
	}

}
